name: Build and deploy Python app to Azure Web App - tbd-backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Ensure this version is supported

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: |
          zip -r release.zip . -x "*.git*" "*.github*" "*.venv*" "release.zip"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_27A1C533D6D84A6B86AB77F69CCC8BA7 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_72B5E50C9F1F4E61A63EEA9B25BE48D4 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_185D5F5FEB48467196908F6E41712B30 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'tbd-backend'
          slot-name: 'Production'
          package: release.zip
          startup-command: |
            python -m venv antenv && \
            . antenv/bin/activate && \
            pip install poetry && \
            poetry install && \
            gunicorn --bind=0.0.0.0 --timeout 600 main:app
